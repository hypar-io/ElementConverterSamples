//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.1.21.0 (Newtonsoft.Json v12.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------
using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Elements.Geometry.Solids;
using Elements.Spatial;
using Elements.Validators;
using Elements.Serialization.JSON;
using System;
using System.Collections.Generic;
using System.Linq;
using Line = Elements.Geometry.Line;
using Polygon = Elements.Geometry.Polygon;

namespace Elements.Piping
{
    #pragma warning disable // Disable all warnings

    /// <summary>A specific location where a pipe makes a connection.</summary>
    [Newtonsoft.Json.JsonConverter(typeof(Elements.Serialization.JSON.JsonInheritanceConverter), "discriminator")]
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PipeConnector 
    {
        [Newtonsoft.Json.JsonConstructor]
        public PipeConnector(Vector3 @position, Vector3 @direction, double @diameter, Flow @flow)
        {
            var validator = Validator.Instance.GetFirstValidatorForType<PipeConnector>();
            if(validator != null)
            {
                validator.PreConstruct(new object[]{ @position, @direction, @diameter, @flow});
            }
        
            this.Position = @position;
            this.Direction = @direction;
            this.Diameter = @diameter;
            this.Flow = @flow;
            
            if(validator != null)
            {
                validator.PostConstruct(this);
            }
        }
    
        /// <summary>The location of the connector.</summary>
        [Newtonsoft.Json.JsonProperty("Position", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Vector3 Position { get; set; }
    
        /// <summary>The direction the connector faces.  This is "out" from the connector, or away from the element being connected.</summary>
        [Newtonsoft.Json.JsonProperty("Direction", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Vector3 Direction { get; set; }
    
        /// <summary>The diameter of the connector.</summary>
        [Newtonsoft.Json.JsonProperty("Diameter", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Diameter { get; set; }
    
        /// <summary>The flow properties of the connector.</summary>
        [Newtonsoft.Json.JsonProperty("Flow", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Flow Flow { get; set; }
    
    
    }
}